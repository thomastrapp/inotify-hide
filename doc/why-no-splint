Splint cannot handle C99 well. For example:

    void f()
    {
      printf("In f\n");

      int i; // <-- breaks splint ("Parse error")
    }

The necessity to declare variables at the top of the scope was removed in C99. Splint cannot deal with this.

But this splint patch may workaround this issue:
  http://www.cs.virginia.edu/pipermail/splint-discuss/attachments/20080718/52cc25f6/attachment.obj
referenced in this stack overflow discussion:
  http://stackoverflow.com/questions/669023/how-can-i-make-splint-ignore-where-i-declare-my-variables

However, I couldn't get it to work with many system headers, this is what I've done (splint includes aforementioned patch):
/usr/local/bin/splint -D_XOPEN_SOURCE=700 +posixstrictlib +gnuextensions -I. -I/usr/include/linux -I /usr/include/x86_64-linux-gnu main.c

output:
Splint 3.1.2 --- 16 Jun 2013

Command Line: Setting +gnuextensions redundant with current value
/usr/include/x86_64-linux-gnu/sys/inotify.h:42:22:
    Parse Error. (For help on parse errors, see splint -help parseerrors.)
*** Cannot continue.

